// Copyright 2023 Styra, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: eopa/policy/v1/policy.proto

package policyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Policy is a thin wrapper type around a Rego policy.
type Policy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Policy) Reset() {
	*x = Policy{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{0}
}

func (x *Policy) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Policy) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// ListPoliciesRequest is used to start a ListPolicy operation.
type ListPoliciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPoliciesRequest) Reset() {
	*x = ListPoliciesRequest{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesRequest) ProtoMessage() {}

func (x *ListPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{1}
}

// ListPoliciesResponse contains the list of all policies enumerated by a
// ListPolicy operation.
type ListPoliciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*Policy              `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPoliciesResponse) Reset() {
	*x = ListPoliciesResponse{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesResponse) ProtoMessage() {}

func (x *ListPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{2}
}

func (x *ListPoliciesResponse) GetResults() []*Policy {
	if x != nil {
		return x.Results
	}
	return nil
}

// CreatePolicyRequest provides the policy and path to insert it at for a
// CreatePolicy operation.
type CreatePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        *Policy                `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"` // Rego module.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePolicyRequest) Reset() {
	*x = CreatePolicyRequest{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyRequest) ProtoMessage() {}

func (x *CreatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePolicyRequest) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// CreatePolicyResponse is an empty confirmation message type.
type CreatePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePolicyResponse) Reset() {
	*x = CreatePolicyResponse{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyResponse) ProtoMessage() {}

func (x *CreatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyResponse.ProtoReflect.Descriptor instead.
func (*CreatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{4}
}

// GetPolicyRequest requires the path of the policy to fetch.
type GetPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyRequest) Reset() {
	*x = GetPolicyRequest{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyRequest) ProtoMessage() {}

func (x *GetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{5}
}

func (x *GetPolicyRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// GetPolicyResponse contains the retrieved Rego module from a GetPolicy
// operation.
type GetPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *Policy                `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"` // Rego module.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyResponse) Reset() {
	*x = GetPolicyResponse{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyResponse) ProtoMessage() {}

func (x *GetPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPolicyResponse) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{6}
}

func (x *GetPolicyResponse) GetResult() *Policy {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpdatePolicyRequest provides the policy and path to update for an
// UpdatePolicy operation.
type UpdatePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        *Policy                `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"` // Rego module.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePolicyRequest) Reset() {
	*x = UpdatePolicyRequest{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyRequest) ProtoMessage() {}

func (x *UpdatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePolicyRequest) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// UpdatePolicyResponse is an empty confirmation message type.
type UpdatePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePolicyResponse) Reset() {
	*x = UpdatePolicyResponse{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyResponse) ProtoMessage() {}

func (x *UpdatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{8}
}

// DeletePolicyRequest specifies which path to delete a policy from.
type DeletePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePolicyRequest) Reset() {
	*x = DeletePolicyRequest{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyRequest) ProtoMessage() {}

func (x *DeletePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyRequest.ProtoReflect.Descriptor instead.
func (*DeletePolicyRequest) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePolicyRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// DeletePolicyResponse is an empty confirmation message type.
type DeletePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePolicyResponse) Reset() {
	*x = DeletePolicyResponse{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyResponse) ProtoMessage() {}

func (x *DeletePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyResponse.ProtoReflect.Descriptor instead.
func (*DeletePolicyResponse) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{10}
}

// StreamingPolicyRequest provides a way to send PolicyService requests over
// gRPC streams. Limited batching support is provided via the
// `writes`/`reads` fields. As in the BulkRW API, if a write operation
// fails, the entire request will be aborted. Writes are done as a single
// transaction, reads are done in parallel.
type StreamingPolicyRWRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// writes provides a sequence of WritePolicy requests.
	Writes []*StreamingPolicyRWRequest_WriteRequest `protobuf:"bytes,1,rep,name=writes,proto3" json:"writes,omitempty"`
	// reads provides a sequence of ReadPolicy requests.
	Reads         []*StreamingPolicyRWRequest_ReadRequest `protobuf:"bytes,2,rep,name=reads,proto3" json:"reads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingPolicyRWRequest) Reset() {
	*x = StreamingPolicyRWRequest{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingPolicyRWRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingPolicyRWRequest) ProtoMessage() {}

func (x *StreamingPolicyRWRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingPolicyRWRequest.ProtoReflect.Descriptor instead.
func (*StreamingPolicyRWRequest) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{11}
}

func (x *StreamingPolicyRWRequest) GetWrites() []*StreamingPolicyRWRequest_WriteRequest {
	if x != nil {
		return x.Writes
	}
	return nil
}

func (x *StreamingPolicyRWRequest) GetReads() []*StreamingPolicyRWRequest_ReadRequest {
	if x != nil {
		return x.Reads
	}
	return nil
}

// StreamingPolicyRWResponse contains lists of the appropriate response types
// for each operation in the StreamingPolicyRWRequest.
type StreamingPolicyRWResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// writes provides a sequence of WritePolicy results.
	Writes []*StreamingPolicyRWResponse_WriteResponse `protobuf:"bytes,1,rep,name=writes,proto3" json:"writes,omitempty"`
	// reads provides a sequence of ReadPolicy results or errors.
	Reads         []*StreamingPolicyRWResponse_ReadResponse `protobuf:"bytes,2,rep,name=reads,proto3" json:"reads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingPolicyRWResponse) Reset() {
	*x = StreamingPolicyRWResponse{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingPolicyRWResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingPolicyRWResponse) ProtoMessage() {}

func (x *StreamingPolicyRWResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingPolicyRWResponse.ProtoReflect.Descriptor instead.
func (*StreamingPolicyRWResponse) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{12}
}

func (x *StreamingPolicyRWResponse) GetWrites() []*StreamingPolicyRWResponse_WriteResponse {
	if x != nil {
		return x.Writes
	}
	return nil
}

func (x *StreamingPolicyRWResponse) GetReads() []*StreamingPolicyRWResponse_ReadResponse {
	if x != nil {
		return x.Reads
	}
	return nil
}

// Context-dependent error messages.
type ErrorList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The errors in the list.
	Errors        []*anypb.Any `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorList) Reset() {
	*x = ErrorList{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorList) ProtoMessage() {}

func (x *ErrorList) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorList.ProtoReflect.Descriptor instead.
func (*ErrorList) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{13}
}

func (x *ErrorList) GetErrors() []*anypb.Any {
	if x != nil {
		return x.Errors
	}
	return nil
}

// WritePolicyRequest provides a union of possible Policy request types.
// This allows creating arbitrary sequences of Policy store operations.
type StreamingPolicyRWRequest_WriteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Req:
	//
	//	*StreamingPolicyRWRequest_WriteRequest_Create
	//	*StreamingPolicyRWRequest_WriteRequest_Update
	//	*StreamingPolicyRWRequest_WriteRequest_Delete
	Req           isStreamingPolicyRWRequest_WriteRequest_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingPolicyRWRequest_WriteRequest) Reset() {
	*x = StreamingPolicyRWRequest_WriteRequest{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingPolicyRWRequest_WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingPolicyRWRequest_WriteRequest) ProtoMessage() {}

func (x *StreamingPolicyRWRequest_WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingPolicyRWRequest_WriteRequest.ProtoReflect.Descriptor instead.
func (*StreamingPolicyRWRequest_WriteRequest) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{11, 0}
}

func (x *StreamingPolicyRWRequest_WriteRequest) GetReq() isStreamingPolicyRWRequest_WriteRequest_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *StreamingPolicyRWRequest_WriteRequest) GetCreate() *CreatePolicyRequest {
	if x != nil {
		if x, ok := x.Req.(*StreamingPolicyRWRequest_WriteRequest_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *StreamingPolicyRWRequest_WriteRequest) GetUpdate() *UpdatePolicyRequest {
	if x != nil {
		if x, ok := x.Req.(*StreamingPolicyRWRequest_WriteRequest_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *StreamingPolicyRWRequest_WriteRequest) GetDelete() *DeletePolicyRequest {
	if x != nil {
		if x, ok := x.Req.(*StreamingPolicyRWRequest_WriteRequest_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

type isStreamingPolicyRWRequest_WriteRequest_Req interface {
	isStreamingPolicyRWRequest_WriteRequest_Req()
}

type StreamingPolicyRWRequest_WriteRequest_Create struct {
	Create *CreatePolicyRequest `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type StreamingPolicyRWRequest_WriteRequest_Update struct {
	Update *UpdatePolicyRequest `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type StreamingPolicyRWRequest_WriteRequest_Delete struct {
	Delete *DeletePolicyRequest `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*StreamingPolicyRWRequest_WriteRequest_Create) isStreamingPolicyRWRequest_WriteRequest_Req() {}

func (*StreamingPolicyRWRequest_WriteRequest_Update) isStreamingPolicyRWRequest_WriteRequest_Req() {}

func (*StreamingPolicyRWRequest_WriteRequest_Delete) isStreamingPolicyRWRequest_WriteRequest_Req() {}

// ReadRequest is currently a simple wrapper over the GetPolicy
// request type.
type StreamingPolicyRWRequest_ReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Get           *GetPolicyRequest      `protobuf:"bytes,1,opt,name=get,proto3" json:"get,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingPolicyRWRequest_ReadRequest) Reset() {
	*x = StreamingPolicyRWRequest_ReadRequest{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingPolicyRWRequest_ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingPolicyRWRequest_ReadRequest) ProtoMessage() {}

func (x *StreamingPolicyRWRequest_ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingPolicyRWRequest_ReadRequest.ProtoReflect.Descriptor instead.
func (*StreamingPolicyRWRequest_ReadRequest) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{11, 1}
}

func (x *StreamingPolicyRWRequest_ReadRequest) GetGet() *GetPolicyRequest {
	if x != nil {
		return x.Get
	}
	return nil
}

// WriteResponse provides a union of possible Policy request types.
// This allows creating arbitrary sequences of Policy store operations.
type StreamingPolicyRWResponse_WriteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Resp:
	//
	//	*StreamingPolicyRWResponse_WriteResponse_Create
	//	*StreamingPolicyRWResponse_WriteResponse_Update
	//	*StreamingPolicyRWResponse_WriteResponse_Delete
	Resp          isStreamingPolicyRWResponse_WriteResponse_Resp `protobuf_oneof:"resp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingPolicyRWResponse_WriteResponse) Reset() {
	*x = StreamingPolicyRWResponse_WriteResponse{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingPolicyRWResponse_WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingPolicyRWResponse_WriteResponse) ProtoMessage() {}

func (x *StreamingPolicyRWResponse_WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingPolicyRWResponse_WriteResponse.ProtoReflect.Descriptor instead.
func (*StreamingPolicyRWResponse_WriteResponse) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{12, 0}
}

func (x *StreamingPolicyRWResponse_WriteResponse) GetResp() isStreamingPolicyRWResponse_WriteResponse_Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *StreamingPolicyRWResponse_WriteResponse) GetCreate() *CreatePolicyResponse {
	if x != nil {
		if x, ok := x.Resp.(*StreamingPolicyRWResponse_WriteResponse_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *StreamingPolicyRWResponse_WriteResponse) GetUpdate() *UpdatePolicyResponse {
	if x != nil {
		if x, ok := x.Resp.(*StreamingPolicyRWResponse_WriteResponse_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *StreamingPolicyRWResponse_WriteResponse) GetDelete() *DeletePolicyResponse {
	if x != nil {
		if x, ok := x.Resp.(*StreamingPolicyRWResponse_WriteResponse_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

type isStreamingPolicyRWResponse_WriteResponse_Resp interface {
	isStreamingPolicyRWResponse_WriteResponse_Resp()
}

type StreamingPolicyRWResponse_WriteResponse_Create struct {
	Create *CreatePolicyResponse `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type StreamingPolicyRWResponse_WriteResponse_Update struct {
	Update *UpdatePolicyResponse `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type StreamingPolicyRWResponse_WriteResponse_Delete struct {
	Delete *DeletePolicyResponse `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*StreamingPolicyRWResponse_WriteResponse_Create) isStreamingPolicyRWResponse_WriteResponse_Resp() {
}

func (*StreamingPolicyRWResponse_WriteResponse_Update) isStreamingPolicyRWResponse_WriteResponse_Resp() {
}

func (*StreamingPolicyRWResponse_WriteResponse_Delete) isStreamingPolicyRWResponse_WriteResponse_Resp() {
}

// ReadResponse is currently a simple wrapper over the GetPolicy
// request type.
type StreamingPolicyRWResponse_ReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Get           *GetPolicyResponse     `protobuf:"bytes,1,opt,name=get,proto3" json:"get,omitempty"`
	Errors        *ErrorList             `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingPolicyRWResponse_ReadResponse) Reset() {
	*x = StreamingPolicyRWResponse_ReadResponse{}
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingPolicyRWResponse_ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingPolicyRWResponse_ReadResponse) ProtoMessage() {}

func (x *StreamingPolicyRWResponse_ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_policy_v1_policy_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingPolicyRWResponse_ReadResponse.ProtoReflect.Descriptor instead.
func (*StreamingPolicyRWResponse_ReadResponse) Descriptor() ([]byte, []int) {
	return file_eopa_policy_v1_policy_proto_rawDescGZIP(), []int{12, 1}
}

func (x *StreamingPolicyRWResponse_ReadResponse) GetGet() *GetPolicyResponse {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *StreamingPolicyRWResponse_ReadResponse) GetErrors() *ErrorList {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_eopa_policy_v1_policy_proto protoreflect.FileDescriptor

var file_eopa_policy_v1_policy_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x6f, 0x70, 0x61, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65,
	0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x48, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x70,
	0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x16,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcd, 0x03, 0x0a, 0x18, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x57, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x1a, 0xd2, 0x01, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x3d, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x3d, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x05, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x1a, 0x41, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x67, 0x65, 0x74, 0x22, 0x8c, 0x04, 0x0a, 0x19, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x57, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x72, 0x65, 0x61, 0x64, 0x73, 0x1a, 0xd7, 0x01, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70,
	0x1a, 0x76, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x39, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x32, 0xbb, 0x04, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x70,
	0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x70,
	0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x23, 0x2e,
	0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x57, 0x12, 0x28, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30,
	0x01, 0x42, 0xc4, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x79, 0x72, 0x61, 0x69, 0x6e, 0x63, 0x2f, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2d, 0x6f, 0x70, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6f, 0x70, 0x61, 0x2f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x45, 0x50, 0x58, 0xaa, 0x02, 0x0e, 0x45, 0x6f, 0x70, 0x61, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x45, 0x6f, 0x70, 0x61, 0x5c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x45, 0x6f, 0x70, 0x61, 0x5c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x45, 0x6f, 0x70, 0x61, 0x3a, 0x3a, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eopa_policy_v1_policy_proto_rawDescOnce sync.Once
	file_eopa_policy_v1_policy_proto_rawDescData = file_eopa_policy_v1_policy_proto_rawDesc
)

func file_eopa_policy_v1_policy_proto_rawDescGZIP() []byte {
	file_eopa_policy_v1_policy_proto_rawDescOnce.Do(func() {
		file_eopa_policy_v1_policy_proto_rawDescData = protoimpl.X.CompressGZIP(file_eopa_policy_v1_policy_proto_rawDescData)
	})
	return file_eopa_policy_v1_policy_proto_rawDescData
}

var file_eopa_policy_v1_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_eopa_policy_v1_policy_proto_goTypes = []any{
	(*Policy)(nil),                                  // 0: eopa.policy.v1.Policy
	(*ListPoliciesRequest)(nil),                     // 1: eopa.policy.v1.ListPoliciesRequest
	(*ListPoliciesResponse)(nil),                    // 2: eopa.policy.v1.ListPoliciesResponse
	(*CreatePolicyRequest)(nil),                     // 3: eopa.policy.v1.CreatePolicyRequest
	(*CreatePolicyResponse)(nil),                    // 4: eopa.policy.v1.CreatePolicyResponse
	(*GetPolicyRequest)(nil),                        // 5: eopa.policy.v1.GetPolicyRequest
	(*GetPolicyResponse)(nil),                       // 6: eopa.policy.v1.GetPolicyResponse
	(*UpdatePolicyRequest)(nil),                     // 7: eopa.policy.v1.UpdatePolicyRequest
	(*UpdatePolicyResponse)(nil),                    // 8: eopa.policy.v1.UpdatePolicyResponse
	(*DeletePolicyRequest)(nil),                     // 9: eopa.policy.v1.DeletePolicyRequest
	(*DeletePolicyResponse)(nil),                    // 10: eopa.policy.v1.DeletePolicyResponse
	(*StreamingPolicyRWRequest)(nil),                // 11: eopa.policy.v1.StreamingPolicyRWRequest
	(*StreamingPolicyRWResponse)(nil),               // 12: eopa.policy.v1.StreamingPolicyRWResponse
	(*ErrorList)(nil),                               // 13: eopa.policy.v1.ErrorList
	(*StreamingPolicyRWRequest_WriteRequest)(nil),   // 14: eopa.policy.v1.StreamingPolicyRWRequest.WriteRequest
	(*StreamingPolicyRWRequest_ReadRequest)(nil),    // 15: eopa.policy.v1.StreamingPolicyRWRequest.ReadRequest
	(*StreamingPolicyRWResponse_WriteResponse)(nil), // 16: eopa.policy.v1.StreamingPolicyRWResponse.WriteResponse
	(*StreamingPolicyRWResponse_ReadResponse)(nil),  // 17: eopa.policy.v1.StreamingPolicyRWResponse.ReadResponse
	(*anypb.Any)(nil),                               // 18: google.protobuf.Any
}
var file_eopa_policy_v1_policy_proto_depIdxs = []int32{
	0,  // 0: eopa.policy.v1.ListPoliciesResponse.results:type_name -> eopa.policy.v1.Policy
	0,  // 1: eopa.policy.v1.CreatePolicyRequest.policy:type_name -> eopa.policy.v1.Policy
	0,  // 2: eopa.policy.v1.GetPolicyResponse.result:type_name -> eopa.policy.v1.Policy
	0,  // 3: eopa.policy.v1.UpdatePolicyRequest.policy:type_name -> eopa.policy.v1.Policy
	14, // 4: eopa.policy.v1.StreamingPolicyRWRequest.writes:type_name -> eopa.policy.v1.StreamingPolicyRWRequest.WriteRequest
	15, // 5: eopa.policy.v1.StreamingPolicyRWRequest.reads:type_name -> eopa.policy.v1.StreamingPolicyRWRequest.ReadRequest
	16, // 6: eopa.policy.v1.StreamingPolicyRWResponse.writes:type_name -> eopa.policy.v1.StreamingPolicyRWResponse.WriteResponse
	17, // 7: eopa.policy.v1.StreamingPolicyRWResponse.reads:type_name -> eopa.policy.v1.StreamingPolicyRWResponse.ReadResponse
	18, // 8: eopa.policy.v1.ErrorList.errors:type_name -> google.protobuf.Any
	3,  // 9: eopa.policy.v1.StreamingPolicyRWRequest.WriteRequest.create:type_name -> eopa.policy.v1.CreatePolicyRequest
	7,  // 10: eopa.policy.v1.StreamingPolicyRWRequest.WriteRequest.update:type_name -> eopa.policy.v1.UpdatePolicyRequest
	9,  // 11: eopa.policy.v1.StreamingPolicyRWRequest.WriteRequest.delete:type_name -> eopa.policy.v1.DeletePolicyRequest
	5,  // 12: eopa.policy.v1.StreamingPolicyRWRequest.ReadRequest.get:type_name -> eopa.policy.v1.GetPolicyRequest
	4,  // 13: eopa.policy.v1.StreamingPolicyRWResponse.WriteResponse.create:type_name -> eopa.policy.v1.CreatePolicyResponse
	8,  // 14: eopa.policy.v1.StreamingPolicyRWResponse.WriteResponse.update:type_name -> eopa.policy.v1.UpdatePolicyResponse
	10, // 15: eopa.policy.v1.StreamingPolicyRWResponse.WriteResponse.delete:type_name -> eopa.policy.v1.DeletePolicyResponse
	6,  // 16: eopa.policy.v1.StreamingPolicyRWResponse.ReadResponse.get:type_name -> eopa.policy.v1.GetPolicyResponse
	13, // 17: eopa.policy.v1.StreamingPolicyRWResponse.ReadResponse.errors:type_name -> eopa.policy.v1.ErrorList
	1,  // 18: eopa.policy.v1.PolicyService.ListPolicies:input_type -> eopa.policy.v1.ListPoliciesRequest
	3,  // 19: eopa.policy.v1.PolicyService.CreatePolicy:input_type -> eopa.policy.v1.CreatePolicyRequest
	5,  // 20: eopa.policy.v1.PolicyService.GetPolicy:input_type -> eopa.policy.v1.GetPolicyRequest
	7,  // 21: eopa.policy.v1.PolicyService.UpdatePolicy:input_type -> eopa.policy.v1.UpdatePolicyRequest
	9,  // 22: eopa.policy.v1.PolicyService.DeletePolicy:input_type -> eopa.policy.v1.DeletePolicyRequest
	11, // 23: eopa.policy.v1.PolicyService.StreamingPolicyRW:input_type -> eopa.policy.v1.StreamingPolicyRWRequest
	2,  // 24: eopa.policy.v1.PolicyService.ListPolicies:output_type -> eopa.policy.v1.ListPoliciesResponse
	4,  // 25: eopa.policy.v1.PolicyService.CreatePolicy:output_type -> eopa.policy.v1.CreatePolicyResponse
	6,  // 26: eopa.policy.v1.PolicyService.GetPolicy:output_type -> eopa.policy.v1.GetPolicyResponse
	8,  // 27: eopa.policy.v1.PolicyService.UpdatePolicy:output_type -> eopa.policy.v1.UpdatePolicyResponse
	10, // 28: eopa.policy.v1.PolicyService.DeletePolicy:output_type -> eopa.policy.v1.DeletePolicyResponse
	12, // 29: eopa.policy.v1.PolicyService.StreamingPolicyRW:output_type -> eopa.policy.v1.StreamingPolicyRWResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_eopa_policy_v1_policy_proto_init() }
func file_eopa_policy_v1_policy_proto_init() {
	if File_eopa_policy_v1_policy_proto != nil {
		return
	}
	file_eopa_policy_v1_policy_proto_msgTypes[14].OneofWrappers = []any{
		(*StreamingPolicyRWRequest_WriteRequest_Create)(nil),
		(*StreamingPolicyRWRequest_WriteRequest_Update)(nil),
		(*StreamingPolicyRWRequest_WriteRequest_Delete)(nil),
	}
	file_eopa_policy_v1_policy_proto_msgTypes[16].OneofWrappers = []any{
		(*StreamingPolicyRWResponse_WriteResponse_Create)(nil),
		(*StreamingPolicyRWResponse_WriteResponse_Update)(nil),
		(*StreamingPolicyRWResponse_WriteResponse_Delete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eopa_policy_v1_policy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eopa_policy_v1_policy_proto_goTypes,
		DependencyIndexes: file_eopa_policy_v1_policy_proto_depIdxs,
		MessageInfos:      file_eopa_policy_v1_policy_proto_msgTypes,
	}.Build()
	File_eopa_policy_v1_policy_proto = out.File
	file_eopa_policy_v1_policy_proto_rawDesc = nil
	file_eopa_policy_v1_policy_proto_goTypes = nil
	file_eopa_policy_v1_policy_proto_depIdxs = nil
}
