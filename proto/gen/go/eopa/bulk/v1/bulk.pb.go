// Copyright 2023 Styra, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: eopa/bulk/v1/bulk.proto

package bulkv1

import (
	v11 "github.com/styrainc/enterprise-opa/proto/gen/go/eopa/data/v1"
	v1 "github.com/styrainc/enterprise-opa/proto/gen/go/eopa/policy/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BulkRWRequest can contain any combination of read/write operations on
// policies and data.
type BulkRWRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// writes_policy provides a sequence of WritePolicy operations to apply.
	WritesPolicy []*BulkRWRequest_WritePolicyRequest `protobuf:"bytes,2,rep,name=writes_policy,json=writesPolicy,proto3" json:"writes_policy,omitempty"`
	// writes_data provides a sequence of WriteData operations to apply.
	WritesData []*BulkRWRequest_WriteDataRequest `protobuf:"bytes,3,rep,name=writes_data,json=writesData,proto3" json:"writes_data,omitempty"`
	// reads_policy provides a sequence of ReadPolicy operations to apply.
	ReadsPolicy []*BulkRWRequest_ReadPolicyRequest `protobuf:"bytes,4,rep,name=reads_policy,json=readsPolicy,proto3" json:"reads_policy,omitempty"`
	// reads_data provides a sequence of ReadData operations to apply.
	ReadsData     []*BulkRWRequest_ReadDataRequest `protobuf:"bytes,5,rep,name=reads_data,json=readsData,proto3" json:"reads_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWRequest) Reset() {
	*x = BulkRWRequest{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWRequest) ProtoMessage() {}

func (x *BulkRWRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWRequest.ProtoReflect.Descriptor instead.
func (*BulkRWRequest) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{0}
}

func (x *BulkRWRequest) GetWritesPolicy() []*BulkRWRequest_WritePolicyRequest {
	if x != nil {
		return x.WritesPolicy
	}
	return nil
}

func (x *BulkRWRequest) GetWritesData() []*BulkRWRequest_WriteDataRequest {
	if x != nil {
		return x.WritesData
	}
	return nil
}

func (x *BulkRWRequest) GetReadsPolicy() []*BulkRWRequest_ReadPolicyRequest {
	if x != nil {
		return x.ReadsPolicy
	}
	return nil
}

func (x *BulkRWRequest) GetReadsData() []*BulkRWRequest_ReadDataRequest {
	if x != nil {
		return x.ReadsData
	}
	return nil
}

// BulkRWResponse contains lists of the appropriate response types for each
// operation in the BulkRWRequest.
type BulkRWResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// writes_policy provides a sequence of WritePolicy results.
	WritesPolicy []*BulkRWResponse_WritePolicyResponse `protobuf:"bytes,2,rep,name=writes_policy,json=writesPolicy,proto3" json:"writes_policy,omitempty"`
	// writes_data provides a sequence of WriteData results.
	WritesData []*BulkRWResponse_WriteDataResponse `protobuf:"bytes,3,rep,name=writes_data,json=writesData,proto3" json:"writes_data,omitempty"`
	// reads_policy provides a sequence of ReadPolicy results or errors.
	ReadsPolicy []*BulkRWResponse_ReadPolicyResponse `protobuf:"bytes,4,rep,name=reads_policy,json=readsPolicy,proto3" json:"reads_policy,omitempty"`
	// reads_data provides a sequence of ReadData results or errors.
	ReadsData     []*BulkRWResponse_ReadDataResponse `protobuf:"bytes,5,rep,name=reads_data,json=readsData,proto3" json:"reads_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWResponse) Reset() {
	*x = BulkRWResponse{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWResponse) ProtoMessage() {}

func (x *BulkRWResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWResponse.ProtoReflect.Descriptor instead.
func (*BulkRWResponse) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{1}
}

func (x *BulkRWResponse) GetWritesPolicy() []*BulkRWResponse_WritePolicyResponse {
	if x != nil {
		return x.WritesPolicy
	}
	return nil
}

func (x *BulkRWResponse) GetWritesData() []*BulkRWResponse_WriteDataResponse {
	if x != nil {
		return x.WritesData
	}
	return nil
}

func (x *BulkRWResponse) GetReadsPolicy() []*BulkRWResponse_ReadPolicyResponse {
	if x != nil {
		return x.ReadsPolicy
	}
	return nil
}

func (x *BulkRWResponse) GetReadsData() []*BulkRWResponse_ReadDataResponse {
	if x != nil {
		return x.ReadsData
	}
	return nil
}

// Context-dependent error messages.
type ErrorList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The errors in the list.
	Errors        []*anypb.Any `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorList) Reset() {
	*x = ErrorList{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorList) ProtoMessage() {}

func (x *ErrorList) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorList.ProtoReflect.Descriptor instead.
func (*ErrorList) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorList) GetErrors() []*anypb.Any {
	if x != nil {
		return x.Errors
	}
	return nil
}

// WritePolicyRequest provides a union of possible Policy request types.
// This allows creating arbitrary sequences of policy store operations.
type BulkRWRequest_WritePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Req:
	//
	//	*BulkRWRequest_WritePolicyRequest_Create
	//	*BulkRWRequest_WritePolicyRequest_Update
	//	*BulkRWRequest_WritePolicyRequest_Delete
	Req           isBulkRWRequest_WritePolicyRequest_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWRequest_WritePolicyRequest) Reset() {
	*x = BulkRWRequest_WritePolicyRequest{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWRequest_WritePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWRequest_WritePolicyRequest) ProtoMessage() {}

func (x *BulkRWRequest_WritePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWRequest_WritePolicyRequest.ProtoReflect.Descriptor instead.
func (*BulkRWRequest_WritePolicyRequest) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BulkRWRequest_WritePolicyRequest) GetReq() isBulkRWRequest_WritePolicyRequest_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *BulkRWRequest_WritePolicyRequest) GetCreate() *v1.CreatePolicyRequest {
	if x != nil {
		if x, ok := x.Req.(*BulkRWRequest_WritePolicyRequest_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *BulkRWRequest_WritePolicyRequest) GetUpdate() *v1.UpdatePolicyRequest {
	if x != nil {
		if x, ok := x.Req.(*BulkRWRequest_WritePolicyRequest_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *BulkRWRequest_WritePolicyRequest) GetDelete() *v1.DeletePolicyRequest {
	if x != nil {
		if x, ok := x.Req.(*BulkRWRequest_WritePolicyRequest_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

type isBulkRWRequest_WritePolicyRequest_Req interface {
	isBulkRWRequest_WritePolicyRequest_Req()
}

type BulkRWRequest_WritePolicyRequest_Create struct {
	Create *v1.CreatePolicyRequest `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type BulkRWRequest_WritePolicyRequest_Update struct {
	Update *v1.UpdatePolicyRequest `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type BulkRWRequest_WritePolicyRequest_Delete struct {
	Delete *v1.DeletePolicyRequest `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*BulkRWRequest_WritePolicyRequest_Create) isBulkRWRequest_WritePolicyRequest_Req() {}

func (*BulkRWRequest_WritePolicyRequest_Update) isBulkRWRequest_WritePolicyRequest_Req() {}

func (*BulkRWRequest_WritePolicyRequest_Delete) isBulkRWRequest_WritePolicyRequest_Req() {}

// WriteDataRequest provides a union of possible Data request types.
// This allows creating arbitrary sequences of data store operations.
type BulkRWRequest_WriteDataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Req:
	//
	//	*BulkRWRequest_WriteDataRequest_Create
	//	*BulkRWRequest_WriteDataRequest_Update
	//	*BulkRWRequest_WriteDataRequest_Delete
	Req           isBulkRWRequest_WriteDataRequest_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWRequest_WriteDataRequest) Reset() {
	*x = BulkRWRequest_WriteDataRequest{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWRequest_WriteDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWRequest_WriteDataRequest) ProtoMessage() {}

func (x *BulkRWRequest_WriteDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWRequest_WriteDataRequest.ProtoReflect.Descriptor instead.
func (*BulkRWRequest_WriteDataRequest) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BulkRWRequest_WriteDataRequest) GetReq() isBulkRWRequest_WriteDataRequest_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *BulkRWRequest_WriteDataRequest) GetCreate() *v11.CreateDataRequest {
	if x != nil {
		if x, ok := x.Req.(*BulkRWRequest_WriteDataRequest_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *BulkRWRequest_WriteDataRequest) GetUpdate() *v11.UpdateDataRequest {
	if x != nil {
		if x, ok := x.Req.(*BulkRWRequest_WriteDataRequest_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *BulkRWRequest_WriteDataRequest) GetDelete() *v11.DeleteDataRequest {
	if x != nil {
		if x, ok := x.Req.(*BulkRWRequest_WriteDataRequest_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

type isBulkRWRequest_WriteDataRequest_Req interface {
	isBulkRWRequest_WriteDataRequest_Req()
}

type BulkRWRequest_WriteDataRequest_Create struct {
	Create *v11.CreateDataRequest `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type BulkRWRequest_WriteDataRequest_Update struct {
	Update *v11.UpdateDataRequest `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type BulkRWRequest_WriteDataRequest_Delete struct {
	Delete *v11.DeleteDataRequest `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*BulkRWRequest_WriteDataRequest_Create) isBulkRWRequest_WriteDataRequest_Req() {}

func (*BulkRWRequest_WriteDataRequest_Update) isBulkRWRequest_WriteDataRequest_Req() {}

func (*BulkRWRequest_WriteDataRequest_Delete) isBulkRWRequest_WriteDataRequest_Req() {}

// ReadPolicyRequest is currently a simple wrapper over the GetPolicy
// request type.
type BulkRWRequest_ReadPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Req           *v1.GetPolicyRequest   `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWRequest_ReadPolicyRequest) Reset() {
	*x = BulkRWRequest_ReadPolicyRequest{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWRequest_ReadPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWRequest_ReadPolicyRequest) ProtoMessage() {}

func (x *BulkRWRequest_ReadPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWRequest_ReadPolicyRequest.ProtoReflect.Descriptor instead.
func (*BulkRWRequest_ReadPolicyRequest) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{0, 2}
}

func (x *BulkRWRequest_ReadPolicyRequest) GetReq() *v1.GetPolicyRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

// ReadDataRequest is currently a simple wrapper over the GetData
// request type.
type BulkRWRequest_ReadDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Req           *v11.GetDataRequest    `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWRequest_ReadDataRequest) Reset() {
	*x = BulkRWRequest_ReadDataRequest{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWRequest_ReadDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWRequest_ReadDataRequest) ProtoMessage() {}

func (x *BulkRWRequest_ReadDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWRequest_ReadDataRequest.ProtoReflect.Descriptor instead.
func (*BulkRWRequest_ReadDataRequest) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{0, 3}
}

func (x *BulkRWRequest_ReadDataRequest) GetReq() *v11.GetDataRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

// WritePolicyResponse provides a union of possible response types,
// mirroring the union of possible request types.
type BulkRWResponse_WritePolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Resp:
	//
	//	*BulkRWResponse_WritePolicyResponse_Create
	//	*BulkRWResponse_WritePolicyResponse_Update
	//	*BulkRWResponse_WritePolicyResponse_Delete
	Resp          isBulkRWResponse_WritePolicyResponse_Resp `protobuf_oneof:"resp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWResponse_WritePolicyResponse) Reset() {
	*x = BulkRWResponse_WritePolicyResponse{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWResponse_WritePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWResponse_WritePolicyResponse) ProtoMessage() {}

func (x *BulkRWResponse_WritePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWResponse_WritePolicyResponse.ProtoReflect.Descriptor instead.
func (*BulkRWResponse_WritePolicyResponse) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{1, 0}
}

func (x *BulkRWResponse_WritePolicyResponse) GetResp() isBulkRWResponse_WritePolicyResponse_Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *BulkRWResponse_WritePolicyResponse) GetCreate() *v1.CreatePolicyResponse {
	if x != nil {
		if x, ok := x.Resp.(*BulkRWResponse_WritePolicyResponse_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *BulkRWResponse_WritePolicyResponse) GetUpdate() *v1.UpdatePolicyResponse {
	if x != nil {
		if x, ok := x.Resp.(*BulkRWResponse_WritePolicyResponse_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *BulkRWResponse_WritePolicyResponse) GetDelete() *v1.DeletePolicyResponse {
	if x != nil {
		if x, ok := x.Resp.(*BulkRWResponse_WritePolicyResponse_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

type isBulkRWResponse_WritePolicyResponse_Resp interface {
	isBulkRWResponse_WritePolicyResponse_Resp()
}

type BulkRWResponse_WritePolicyResponse_Create struct {
	Create *v1.CreatePolicyResponse `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type BulkRWResponse_WritePolicyResponse_Update struct {
	Update *v1.UpdatePolicyResponse `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type BulkRWResponse_WritePolicyResponse_Delete struct {
	Delete *v1.DeletePolicyResponse `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*BulkRWResponse_WritePolicyResponse_Create) isBulkRWResponse_WritePolicyResponse_Resp() {}

func (*BulkRWResponse_WritePolicyResponse_Update) isBulkRWResponse_WritePolicyResponse_Resp() {}

func (*BulkRWResponse_WritePolicyResponse_Delete) isBulkRWResponse_WritePolicyResponse_Resp() {}

// WriteDataResponse provides a union of possible response types,
// mirroring the union of possible request types.
type BulkRWResponse_WriteDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Resp:
	//
	//	*BulkRWResponse_WriteDataResponse_Create
	//	*BulkRWResponse_WriteDataResponse_Update
	//	*BulkRWResponse_WriteDataResponse_Delete
	Resp          isBulkRWResponse_WriteDataResponse_Resp `protobuf_oneof:"resp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWResponse_WriteDataResponse) Reset() {
	*x = BulkRWResponse_WriteDataResponse{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWResponse_WriteDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWResponse_WriteDataResponse) ProtoMessage() {}

func (x *BulkRWResponse_WriteDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWResponse_WriteDataResponse.ProtoReflect.Descriptor instead.
func (*BulkRWResponse_WriteDataResponse) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{1, 1}
}

func (x *BulkRWResponse_WriteDataResponse) GetResp() isBulkRWResponse_WriteDataResponse_Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *BulkRWResponse_WriteDataResponse) GetCreate() *v11.CreateDataResponse {
	if x != nil {
		if x, ok := x.Resp.(*BulkRWResponse_WriteDataResponse_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *BulkRWResponse_WriteDataResponse) GetUpdate() *v11.UpdateDataResponse {
	if x != nil {
		if x, ok := x.Resp.(*BulkRWResponse_WriteDataResponse_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *BulkRWResponse_WriteDataResponse) GetDelete() *v11.DeleteDataResponse {
	if x != nil {
		if x, ok := x.Resp.(*BulkRWResponse_WriteDataResponse_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

type isBulkRWResponse_WriteDataResponse_Resp interface {
	isBulkRWResponse_WriteDataResponse_Resp()
}

type BulkRWResponse_WriteDataResponse_Create struct {
	Create *v11.CreateDataResponse `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type BulkRWResponse_WriteDataResponse_Update struct {
	Update *v11.UpdateDataResponse `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type BulkRWResponse_WriteDataResponse_Delete struct {
	Delete *v11.DeleteDataResponse `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*BulkRWResponse_WriteDataResponse_Create) isBulkRWResponse_WriteDataResponse_Resp() {}

func (*BulkRWResponse_WriteDataResponse_Update) isBulkRWResponse_WriteDataResponse_Resp() {}

func (*BulkRWResponse_WriteDataResponse_Delete) isBulkRWResponse_WriteDataResponse_Resp() {}

// ReadPolicyResponse provides fields for a response or list of errors.
// The two should be mutually exclusive.
type BulkRWResponse_ReadPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resp          *v1.GetPolicyResponse  `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	Errors        *ErrorList             `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWResponse_ReadPolicyResponse) Reset() {
	*x = BulkRWResponse_ReadPolicyResponse{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWResponse_ReadPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWResponse_ReadPolicyResponse) ProtoMessage() {}

func (x *BulkRWResponse_ReadPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWResponse_ReadPolicyResponse.ProtoReflect.Descriptor instead.
func (*BulkRWResponse_ReadPolicyResponse) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{1, 2}
}

func (x *BulkRWResponse_ReadPolicyResponse) GetResp() *v1.GetPolicyResponse {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *BulkRWResponse_ReadPolicyResponse) GetErrors() *ErrorList {
	if x != nil {
		return x.Errors
	}
	return nil
}

// ReadDataResponse provides fields for a response or list of errors. The
// two should be mutually exclusive.
type BulkRWResponse_ReadDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resp          *v11.GetDataResponse   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	Errors        *ErrorList             `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkRWResponse_ReadDataResponse) Reset() {
	*x = BulkRWResponse_ReadDataResponse{}
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkRWResponse_ReadDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkRWResponse_ReadDataResponse) ProtoMessage() {}

func (x *BulkRWResponse_ReadDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_bulk_v1_bulk_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkRWResponse_ReadDataResponse.ProtoReflect.Descriptor instead.
func (*BulkRWResponse_ReadDataResponse) Descriptor() ([]byte, []int) {
	return file_eopa_bulk_v1_bulk_proto_rawDescGZIP(), []int{1, 3}
}

func (x *BulkRWResponse_ReadDataResponse) GetResp() *v11.GetDataResponse {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *BulkRWResponse_ReadDataResponse) GetErrors() *ErrorList {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_eopa_bulk_v1_bulk_proto protoreflect.FileDescriptor

var file_eopa_bulk_v1_bulk_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x6f, 0x70, 0x61, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x75, 0x6c, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x65, 0x6f, 0x70, 0x61, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x65, 0x6f, 0x70, 0x61, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x07, 0x0a, 0x0d, 0x42, 0x75, 0x6c,
	0x6b, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0d, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x4d, 0x0a, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50,
	0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x73, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x4a, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xd8, 0x01, 0x0a,
	0x12, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x3d, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x1a, 0xca, 0x01, 0x0a, 0x10, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x05, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x1a, 0x47, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x72, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x1a, 0x41, 0x0a,
	0x0f, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71,
	0x22, 0x82, 0x08, 0x0a, 0x0e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x6f, 0x70,
	0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4f, 0x0a, 0x0b, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x0c, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x4c, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xdd, 0x01,
	0x0a, 0x13, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x1a, 0xcf, 0x01,
	0x0a, 0x11, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x3a, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f,
	0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x1a,
	0x7c, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65,
	0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x76, 0x0a,
	0x10, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x72, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x39, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x32, 0x52, 0x0a, 0x0b, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x43, 0x0a, 0x06, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x12, 0x1b, 0x2e, 0x65, 0x6f, 0x70, 0x61,
	0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x62, 0x75,
	0x6c, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb4, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6f, 0x70,
	0x61, 0x2e, 0x62, 0x75, 0x6c, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x42, 0x75, 0x6c, 0x6b, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x79, 0x72, 0x61, 0x69, 0x6e, 0x63, 0x2f, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2d, 0x6f, 0x70, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6f, 0x70, 0x61, 0x2f, 0x62, 0x75, 0x6c,
	0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x75, 0x6c, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x42,
	0x58, 0xaa, 0x02, 0x0c, 0x45, 0x6f, 0x70, 0x61, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0c, 0x45, 0x6f, 0x70, 0x61, 0x5c, 0x42, 0x75, 0x6c, 0x6b, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x18, 0x45, 0x6f, 0x70, 0x61, 0x5c, 0x42, 0x75, 0x6c, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x45, 0x6f, 0x70,
	0x61, 0x3a, 0x3a, 0x42, 0x75, 0x6c, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_eopa_bulk_v1_bulk_proto_rawDescOnce sync.Once
	file_eopa_bulk_v1_bulk_proto_rawDescData = file_eopa_bulk_v1_bulk_proto_rawDesc
)

func file_eopa_bulk_v1_bulk_proto_rawDescGZIP() []byte {
	file_eopa_bulk_v1_bulk_proto_rawDescOnce.Do(func() {
		file_eopa_bulk_v1_bulk_proto_rawDescData = protoimpl.X.CompressGZIP(file_eopa_bulk_v1_bulk_proto_rawDescData)
	})
	return file_eopa_bulk_v1_bulk_proto_rawDescData
}

var file_eopa_bulk_v1_bulk_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_eopa_bulk_v1_bulk_proto_goTypes = []any{
	(*BulkRWRequest)(nil),                      // 0: eopa.bulk.v1.BulkRWRequest
	(*BulkRWResponse)(nil),                     // 1: eopa.bulk.v1.BulkRWResponse
	(*ErrorList)(nil),                          // 2: eopa.bulk.v1.ErrorList
	(*BulkRWRequest_WritePolicyRequest)(nil),   // 3: eopa.bulk.v1.BulkRWRequest.WritePolicyRequest
	(*BulkRWRequest_WriteDataRequest)(nil),     // 4: eopa.bulk.v1.BulkRWRequest.WriteDataRequest
	(*BulkRWRequest_ReadPolicyRequest)(nil),    // 5: eopa.bulk.v1.BulkRWRequest.ReadPolicyRequest
	(*BulkRWRequest_ReadDataRequest)(nil),      // 6: eopa.bulk.v1.BulkRWRequest.ReadDataRequest
	(*BulkRWResponse_WritePolicyResponse)(nil), // 7: eopa.bulk.v1.BulkRWResponse.WritePolicyResponse
	(*BulkRWResponse_WriteDataResponse)(nil),   // 8: eopa.bulk.v1.BulkRWResponse.WriteDataResponse
	(*BulkRWResponse_ReadPolicyResponse)(nil),  // 9: eopa.bulk.v1.BulkRWResponse.ReadPolicyResponse
	(*BulkRWResponse_ReadDataResponse)(nil),    // 10: eopa.bulk.v1.BulkRWResponse.ReadDataResponse
	(*anypb.Any)(nil),                          // 11: google.protobuf.Any
	(*v1.CreatePolicyRequest)(nil),             // 12: eopa.policy.v1.CreatePolicyRequest
	(*v1.UpdatePolicyRequest)(nil),             // 13: eopa.policy.v1.UpdatePolicyRequest
	(*v1.DeletePolicyRequest)(nil),             // 14: eopa.policy.v1.DeletePolicyRequest
	(*v11.CreateDataRequest)(nil),              // 15: eopa.data.v1.CreateDataRequest
	(*v11.UpdateDataRequest)(nil),              // 16: eopa.data.v1.UpdateDataRequest
	(*v11.DeleteDataRequest)(nil),              // 17: eopa.data.v1.DeleteDataRequest
	(*v1.GetPolicyRequest)(nil),                // 18: eopa.policy.v1.GetPolicyRequest
	(*v11.GetDataRequest)(nil),                 // 19: eopa.data.v1.GetDataRequest
	(*v1.CreatePolicyResponse)(nil),            // 20: eopa.policy.v1.CreatePolicyResponse
	(*v1.UpdatePolicyResponse)(nil),            // 21: eopa.policy.v1.UpdatePolicyResponse
	(*v1.DeletePolicyResponse)(nil),            // 22: eopa.policy.v1.DeletePolicyResponse
	(*v11.CreateDataResponse)(nil),             // 23: eopa.data.v1.CreateDataResponse
	(*v11.UpdateDataResponse)(nil),             // 24: eopa.data.v1.UpdateDataResponse
	(*v11.DeleteDataResponse)(nil),             // 25: eopa.data.v1.DeleteDataResponse
	(*v1.GetPolicyResponse)(nil),               // 26: eopa.policy.v1.GetPolicyResponse
	(*v11.GetDataResponse)(nil),                // 27: eopa.data.v1.GetDataResponse
}
var file_eopa_bulk_v1_bulk_proto_depIdxs = []int32{
	3,  // 0: eopa.bulk.v1.BulkRWRequest.writes_policy:type_name -> eopa.bulk.v1.BulkRWRequest.WritePolicyRequest
	4,  // 1: eopa.bulk.v1.BulkRWRequest.writes_data:type_name -> eopa.bulk.v1.BulkRWRequest.WriteDataRequest
	5,  // 2: eopa.bulk.v1.BulkRWRequest.reads_policy:type_name -> eopa.bulk.v1.BulkRWRequest.ReadPolicyRequest
	6,  // 3: eopa.bulk.v1.BulkRWRequest.reads_data:type_name -> eopa.bulk.v1.BulkRWRequest.ReadDataRequest
	7,  // 4: eopa.bulk.v1.BulkRWResponse.writes_policy:type_name -> eopa.bulk.v1.BulkRWResponse.WritePolicyResponse
	8,  // 5: eopa.bulk.v1.BulkRWResponse.writes_data:type_name -> eopa.bulk.v1.BulkRWResponse.WriteDataResponse
	9,  // 6: eopa.bulk.v1.BulkRWResponse.reads_policy:type_name -> eopa.bulk.v1.BulkRWResponse.ReadPolicyResponse
	10, // 7: eopa.bulk.v1.BulkRWResponse.reads_data:type_name -> eopa.bulk.v1.BulkRWResponse.ReadDataResponse
	11, // 8: eopa.bulk.v1.ErrorList.errors:type_name -> google.protobuf.Any
	12, // 9: eopa.bulk.v1.BulkRWRequest.WritePolicyRequest.create:type_name -> eopa.policy.v1.CreatePolicyRequest
	13, // 10: eopa.bulk.v1.BulkRWRequest.WritePolicyRequest.update:type_name -> eopa.policy.v1.UpdatePolicyRequest
	14, // 11: eopa.bulk.v1.BulkRWRequest.WritePolicyRequest.delete:type_name -> eopa.policy.v1.DeletePolicyRequest
	15, // 12: eopa.bulk.v1.BulkRWRequest.WriteDataRequest.create:type_name -> eopa.data.v1.CreateDataRequest
	16, // 13: eopa.bulk.v1.BulkRWRequest.WriteDataRequest.update:type_name -> eopa.data.v1.UpdateDataRequest
	17, // 14: eopa.bulk.v1.BulkRWRequest.WriteDataRequest.delete:type_name -> eopa.data.v1.DeleteDataRequest
	18, // 15: eopa.bulk.v1.BulkRWRequest.ReadPolicyRequest.req:type_name -> eopa.policy.v1.GetPolicyRequest
	19, // 16: eopa.bulk.v1.BulkRWRequest.ReadDataRequest.req:type_name -> eopa.data.v1.GetDataRequest
	20, // 17: eopa.bulk.v1.BulkRWResponse.WritePolicyResponse.create:type_name -> eopa.policy.v1.CreatePolicyResponse
	21, // 18: eopa.bulk.v1.BulkRWResponse.WritePolicyResponse.update:type_name -> eopa.policy.v1.UpdatePolicyResponse
	22, // 19: eopa.bulk.v1.BulkRWResponse.WritePolicyResponse.delete:type_name -> eopa.policy.v1.DeletePolicyResponse
	23, // 20: eopa.bulk.v1.BulkRWResponse.WriteDataResponse.create:type_name -> eopa.data.v1.CreateDataResponse
	24, // 21: eopa.bulk.v1.BulkRWResponse.WriteDataResponse.update:type_name -> eopa.data.v1.UpdateDataResponse
	25, // 22: eopa.bulk.v1.BulkRWResponse.WriteDataResponse.delete:type_name -> eopa.data.v1.DeleteDataResponse
	26, // 23: eopa.bulk.v1.BulkRWResponse.ReadPolicyResponse.resp:type_name -> eopa.policy.v1.GetPolicyResponse
	2,  // 24: eopa.bulk.v1.BulkRWResponse.ReadPolicyResponse.errors:type_name -> eopa.bulk.v1.ErrorList
	27, // 25: eopa.bulk.v1.BulkRWResponse.ReadDataResponse.resp:type_name -> eopa.data.v1.GetDataResponse
	2,  // 26: eopa.bulk.v1.BulkRWResponse.ReadDataResponse.errors:type_name -> eopa.bulk.v1.ErrorList
	0,  // 27: eopa.bulk.v1.BulkService.BulkRW:input_type -> eopa.bulk.v1.BulkRWRequest
	1,  // 28: eopa.bulk.v1.BulkService.BulkRW:output_type -> eopa.bulk.v1.BulkRWResponse
	28, // [28:29] is the sub-list for method output_type
	27, // [27:28] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_eopa_bulk_v1_bulk_proto_init() }
func file_eopa_bulk_v1_bulk_proto_init() {
	if File_eopa_bulk_v1_bulk_proto != nil {
		return
	}
	file_eopa_bulk_v1_bulk_proto_msgTypes[3].OneofWrappers = []any{
		(*BulkRWRequest_WritePolicyRequest_Create)(nil),
		(*BulkRWRequest_WritePolicyRequest_Update)(nil),
		(*BulkRWRequest_WritePolicyRequest_Delete)(nil),
	}
	file_eopa_bulk_v1_bulk_proto_msgTypes[4].OneofWrappers = []any{
		(*BulkRWRequest_WriteDataRequest_Create)(nil),
		(*BulkRWRequest_WriteDataRequest_Update)(nil),
		(*BulkRWRequest_WriteDataRequest_Delete)(nil),
	}
	file_eopa_bulk_v1_bulk_proto_msgTypes[7].OneofWrappers = []any{
		(*BulkRWResponse_WritePolicyResponse_Create)(nil),
		(*BulkRWResponse_WritePolicyResponse_Update)(nil),
		(*BulkRWResponse_WritePolicyResponse_Delete)(nil),
	}
	file_eopa_bulk_v1_bulk_proto_msgTypes[8].OneofWrappers = []any{
		(*BulkRWResponse_WriteDataResponse_Create)(nil),
		(*BulkRWResponse_WriteDataResponse_Update)(nil),
		(*BulkRWResponse_WriteDataResponse_Delete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eopa_bulk_v1_bulk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eopa_bulk_v1_bulk_proto_goTypes,
		DependencyIndexes: file_eopa_bulk_v1_bulk_proto_depIdxs,
		MessageInfos:      file_eopa_bulk_v1_bulk_proto_msgTypes,
	}.Build()
	File_eopa_bulk_v1_bulk_proto = out.File
	file_eopa_bulk_v1_bulk_proto_rawDesc = nil
	file_eopa_bulk_v1_bulk_proto_goTypes = nil
	file_eopa_bulk_v1_bulk_proto_depIdxs = nil
}
