// Copyright 2023 Styra, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: eopa/data/v1/data.proto

package datav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PatchOp allows specifying a subset of JSON-Patch operations, namely
// "add", "remove", and "replace".
type PatchOp int32

const (
	PatchOp_PATCH_OP_UNSPECIFIED PatchOp = 0
	PatchOp_PATCH_OP_ADD         PatchOp = 1
	PatchOp_PATCH_OP_REMOVE      PatchOp = 2
	PatchOp_PATCH_OP_REPLACE     PatchOp = 3
)

// Enum value maps for PatchOp.
var (
	PatchOp_name = map[int32]string{
		0: "PATCH_OP_UNSPECIFIED",
		1: "PATCH_OP_ADD",
		2: "PATCH_OP_REMOVE",
		3: "PATCH_OP_REPLACE",
	}
	PatchOp_value = map[string]int32{
		"PATCH_OP_UNSPECIFIED": 0,
		"PATCH_OP_ADD":         1,
		"PATCH_OP_REMOVE":      2,
		"PATCH_OP_REPLACE":     3,
	}
)

func (x PatchOp) Enum() *PatchOp {
	p := new(PatchOp)
	*p = x
	return p
}

func (x PatchOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PatchOp) Descriptor() protoreflect.EnumDescriptor {
	return file_eopa_data_v1_data_proto_enumTypes[0].Descriptor()
}

func (PatchOp) Type() protoreflect.EnumType {
	return &file_eopa_data_v1_data_proto_enumTypes[0]
}

func (x PatchOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PatchOp.Descriptor instead.
func (PatchOp) EnumDescriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{0}
}

// DataDocument is a thin wrapper type around a JSON value located at a
// particular path in the virtual document store.
type DataDocument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Document      *structpb.Value        `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"` // json value, like {"foo":true} or [1, 2, 3]
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataDocument) Reset() {
	*x = DataDocument{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataDocument) ProtoMessage() {}

func (x *DataDocument) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataDocument.ProtoReflect.Descriptor instead.
func (*DataDocument) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *DataDocument) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DataDocument) GetDocument() *structpb.Value {
	if x != nil {
		return x.Document
	}
	return nil
}

// InputDocument is a thin wrapper type around OPA inputs, which are always
// JSON object types.
type InputDocument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Document      *structpb.Struct       `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"` // json object, like {"foo":true}
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputDocument) Reset() {
	*x = InputDocument{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputDocument) ProtoMessage() {}

func (x *InputDocument) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputDocument.ProtoReflect.Descriptor instead.
func (*InputDocument) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *InputDocument) GetDocument() *structpb.Struct {
	if x != nil {
		return x.Document
	}
	return nil
}

// CreateDataRequest provides a document and the path to insert it at.
type CreateDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DataDocument          `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDataRequest) Reset() {
	*x = CreateDataRequest{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataRequest) ProtoMessage() {}

func (x *CreateDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataRequest.ProtoReflect.Descriptor instead.
func (*CreateDataRequest) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDataRequest) GetData() *DataDocument {
	if x != nil {
		return x.Data
	}
	return nil
}

// CreateDataResponse is an empty confirmation message type.
type CreateDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDataResponse) Reset() {
	*x = CreateDataResponse{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataResponse) ProtoMessage() {}

func (x *CreateDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataResponse.ProtoReflect.Descriptor instead.
func (*CreateDataResponse) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{3}
}

// GetDataRequest queries the virtual document store at the specified path.
// This path can target a rule, or any value under the `data` document.
//
// Input to a query can also be provided, as a key-value mapping that will
// appear under the `input` document at runtime. For example, the following
// input mapping:
// ```json
//
//	{
//	  "a": 2,
//	  "b": "example",
//	  "c": true
//	}
//
// ````
// would map to `input.a`, `input.b`, and `input.c`, where `input.a` has
// the value `2`, and so forth in a Rego policy.
type GetDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Input         *InputDocument         `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDataRequest) Reset() {
	*x = GetDataRequest{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataRequest) ProtoMessage() {}

func (x *GetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataRequest.ProtoReflect.Descriptor instead.
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{4}
}

func (x *GetDataRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetDataRequest) GetInput() *InputDocument {
	if x != nil {
		return x.Input
	}
	return nil
}

// GetDataResponse is the query result returned from a GetData operation.
type GetDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *DataDocument          `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDataResponse) Reset() {
	*x = GetDataResponse{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataResponse) ProtoMessage() {}

func (x *GetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataResponse.ProtoReflect.Descriptor instead.
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{5}
}

func (x *GetDataResponse) GetResult() *DataDocument {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpdateDataRequest provides an optional document to patch in, and the
// patch operation specifying whether it's a create/update/delete operation
// to be performed.
type UpdateDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DataDocument          `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                        // JSON value to be patched in, like {"foo":true}
	Op            PatchOp                `protobuf:"varint,2,opt,name=op,proto3,enum=eopa.data.v1.PatchOp" json:"op,omitempty"` // If unspecified, defaults to "overwrite/replace".
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDataRequest) Reset() {
	*x = UpdateDataRequest{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataRequest) ProtoMessage() {}

func (x *UpdateDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataRequest) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDataRequest) GetData() *DataDocument {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateDataRequest) GetOp() PatchOp {
	if x != nil {
		return x.Op
	}
	return PatchOp_PATCH_OP_UNSPECIFIED
}

// UpdateDataResponse is an empty confirmation message type.
type UpdateDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDataResponse) Reset() {
	*x = UpdateDataResponse{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataResponse) ProtoMessage() {}

func (x *UpdateDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataResponse.ProtoReflect.Descriptor instead.
func (*UpdateDataResponse) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{7}
}

// DeleteDataRequest provides the path of a document to delete from the
// document store.
type DeleteDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDataRequest) Reset() {
	*x = DeleteDataRequest{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataRequest) ProtoMessage() {}

func (x *DeleteDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataRequest.ProtoReflect.Descriptor instead.
func (*DeleteDataRequest) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDataRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// DeleteDataResponse is an empty confirmation message type.
type DeleteDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDataResponse) Reset() {
	*x = DeleteDataResponse{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataResponse) ProtoMessage() {}

func (x *DeleteDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataResponse.ProtoReflect.Descriptor instead.
func (*DeleteDataResponse) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{9}
}

// StreamingDataRequest provides a way to send DataService requests over
// gRPC streams. Limited batching support is provided via the
// `writes`/`reads` fields. As in the BulkRW API, if a write operation
// fails, the entire request will be aborted. Writes are done as a single
// transaction, reads are done in parallel.
type StreamingDataRWRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// writes provides a sequence of WriteData requests.
	Writes []*StreamingDataRWRequest_WriteRequest `protobuf:"bytes,1,rep,name=writes,proto3" json:"writes,omitempty"`
	// reads provides a sequence of ReadData requests.
	Reads         []*StreamingDataRWRequest_ReadRequest `protobuf:"bytes,2,rep,name=reads,proto3" json:"reads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDataRWRequest) Reset() {
	*x = StreamingDataRWRequest{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDataRWRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDataRWRequest) ProtoMessage() {}

func (x *StreamingDataRWRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingDataRWRequest.ProtoReflect.Descriptor instead.
func (*StreamingDataRWRequest) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{10}
}

func (x *StreamingDataRWRequest) GetWrites() []*StreamingDataRWRequest_WriteRequest {
	if x != nil {
		return x.Writes
	}
	return nil
}

func (x *StreamingDataRWRequest) GetReads() []*StreamingDataRWRequest_ReadRequest {
	if x != nil {
		return x.Reads
	}
	return nil
}

// StreamingDataRWResponse contains lists of the appropriate response types
// for each operation in the StreamingDataRWRequest.
type StreamingDataRWResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// writes provides a sequence of WriteData results.
	Writes []*StreamingDataRWResponse_WriteResponse `protobuf:"bytes,1,rep,name=writes,proto3" json:"writes,omitempty"`
	// reads provides a sequence of ReadData results or errors.
	Reads         []*StreamingDataRWResponse_ReadResponse `protobuf:"bytes,2,rep,name=reads,proto3" json:"reads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDataRWResponse) Reset() {
	*x = StreamingDataRWResponse{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDataRWResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDataRWResponse) ProtoMessage() {}

func (x *StreamingDataRWResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingDataRWResponse.ProtoReflect.Descriptor instead.
func (*StreamingDataRWResponse) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{11}
}

func (x *StreamingDataRWResponse) GetWrites() []*StreamingDataRWResponse_WriteResponse {
	if x != nil {
		return x.Writes
	}
	return nil
}

func (x *StreamingDataRWResponse) GetReads() []*StreamingDataRWResponse_ReadResponse {
	if x != nil {
		return x.Reads
	}
	return nil
}

// Context-dependent error messages.
type ErrorList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The errors in the list.
	Errors        []*anypb.Any `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorList) Reset() {
	*x = ErrorList{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorList) ProtoMessage() {}

func (x *ErrorList) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorList.ProtoReflect.Descriptor instead.
func (*ErrorList) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{12}
}

func (x *ErrorList) GetErrors() []*anypb.Any {
	if x != nil {
		return x.Errors
	}
	return nil
}

// WriteDataRequest provides a union of possible Data request types.
// This allows creating arbitrary sequences of data store operations.
type StreamingDataRWRequest_WriteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Req:
	//
	//	*StreamingDataRWRequest_WriteRequest_Create
	//	*StreamingDataRWRequest_WriteRequest_Update
	//	*StreamingDataRWRequest_WriteRequest_Delete
	Req           isStreamingDataRWRequest_WriteRequest_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDataRWRequest_WriteRequest) Reset() {
	*x = StreamingDataRWRequest_WriteRequest{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDataRWRequest_WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDataRWRequest_WriteRequest) ProtoMessage() {}

func (x *StreamingDataRWRequest_WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingDataRWRequest_WriteRequest.ProtoReflect.Descriptor instead.
func (*StreamingDataRWRequest_WriteRequest) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{10, 0}
}

func (x *StreamingDataRWRequest_WriteRequest) GetReq() isStreamingDataRWRequest_WriteRequest_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *StreamingDataRWRequest_WriteRequest) GetCreate() *CreateDataRequest {
	if x != nil {
		if x, ok := x.Req.(*StreamingDataRWRequest_WriteRequest_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *StreamingDataRWRequest_WriteRequest) GetUpdate() *UpdateDataRequest {
	if x != nil {
		if x, ok := x.Req.(*StreamingDataRWRequest_WriteRequest_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *StreamingDataRWRequest_WriteRequest) GetDelete() *DeleteDataRequest {
	if x != nil {
		if x, ok := x.Req.(*StreamingDataRWRequest_WriteRequest_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

type isStreamingDataRWRequest_WriteRequest_Req interface {
	isStreamingDataRWRequest_WriteRequest_Req()
}

type StreamingDataRWRequest_WriteRequest_Create struct {
	Create *CreateDataRequest `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type StreamingDataRWRequest_WriteRequest_Update struct {
	Update *UpdateDataRequest `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type StreamingDataRWRequest_WriteRequest_Delete struct {
	Delete *DeleteDataRequest `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*StreamingDataRWRequest_WriteRequest_Create) isStreamingDataRWRequest_WriteRequest_Req() {}

func (*StreamingDataRWRequest_WriteRequest_Update) isStreamingDataRWRequest_WriteRequest_Req() {}

func (*StreamingDataRWRequest_WriteRequest_Delete) isStreamingDataRWRequest_WriteRequest_Req() {}

// ReadRequest is currently a simple wrapper over the GetData
// request type.
type StreamingDataRWRequest_ReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Get           *GetDataRequest        `protobuf:"bytes,1,opt,name=get,proto3" json:"get,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDataRWRequest_ReadRequest) Reset() {
	*x = StreamingDataRWRequest_ReadRequest{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDataRWRequest_ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDataRWRequest_ReadRequest) ProtoMessage() {}

func (x *StreamingDataRWRequest_ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingDataRWRequest_ReadRequest.ProtoReflect.Descriptor instead.
func (*StreamingDataRWRequest_ReadRequest) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{10, 1}
}

func (x *StreamingDataRWRequest_ReadRequest) GetGet() *GetDataRequest {
	if x != nil {
		return x.Get
	}
	return nil
}

// WriteResponse provides a union of possible Data request types.
// This allows creating arbitrary sequences of data store operations.
type StreamingDataRWResponse_WriteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Resp:
	//
	//	*StreamingDataRWResponse_WriteResponse_Create
	//	*StreamingDataRWResponse_WriteResponse_Update
	//	*StreamingDataRWResponse_WriteResponse_Delete
	Resp          isStreamingDataRWResponse_WriteResponse_Resp `protobuf_oneof:"resp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDataRWResponse_WriteResponse) Reset() {
	*x = StreamingDataRWResponse_WriteResponse{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDataRWResponse_WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDataRWResponse_WriteResponse) ProtoMessage() {}

func (x *StreamingDataRWResponse_WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingDataRWResponse_WriteResponse.ProtoReflect.Descriptor instead.
func (*StreamingDataRWResponse_WriteResponse) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{11, 0}
}

func (x *StreamingDataRWResponse_WriteResponse) GetResp() isStreamingDataRWResponse_WriteResponse_Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *StreamingDataRWResponse_WriteResponse) GetCreate() *CreateDataResponse {
	if x != nil {
		if x, ok := x.Resp.(*StreamingDataRWResponse_WriteResponse_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *StreamingDataRWResponse_WriteResponse) GetUpdate() *UpdateDataResponse {
	if x != nil {
		if x, ok := x.Resp.(*StreamingDataRWResponse_WriteResponse_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *StreamingDataRWResponse_WriteResponse) GetDelete() *DeleteDataResponse {
	if x != nil {
		if x, ok := x.Resp.(*StreamingDataRWResponse_WriteResponse_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

type isStreamingDataRWResponse_WriteResponse_Resp interface {
	isStreamingDataRWResponse_WriteResponse_Resp()
}

type StreamingDataRWResponse_WriteResponse_Create struct {
	Create *CreateDataResponse `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type StreamingDataRWResponse_WriteResponse_Update struct {
	Update *UpdateDataResponse `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type StreamingDataRWResponse_WriteResponse_Delete struct {
	Delete *DeleteDataResponse `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*StreamingDataRWResponse_WriteResponse_Create) isStreamingDataRWResponse_WriteResponse_Resp() {}

func (*StreamingDataRWResponse_WriteResponse_Update) isStreamingDataRWResponse_WriteResponse_Resp() {}

func (*StreamingDataRWResponse_WriteResponse_Delete) isStreamingDataRWResponse_WriteResponse_Resp() {}

// ReadResponse is currently a simple wrapper over the GetData
// request type.
type StreamingDataRWResponse_ReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Get           *GetDataResponse       `protobuf:"bytes,1,opt,name=get,proto3" json:"get,omitempty"`
	Errors        *ErrorList             `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDataRWResponse_ReadResponse) Reset() {
	*x = StreamingDataRWResponse_ReadResponse{}
	mi := &file_eopa_data_v1_data_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDataRWResponse_ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDataRWResponse_ReadResponse) ProtoMessage() {}

func (x *StreamingDataRWResponse_ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eopa_data_v1_data_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingDataRWResponse_ReadResponse.ProtoReflect.Descriptor instead.
func (*StreamingDataRWResponse_ReadResponse) Descriptor() ([]byte, []int) {
	return file_eopa_data_v1_data_proto_rawDescGZIP(), []int{11, 1}
}

func (x *StreamingDataRWResponse_ReadResponse) GetGet() *GetDataResponse {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *StreamingDataRWResponse_ReadResponse) GetErrors() *ErrorList {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_eopa_data_v1_data_proto protoreflect.FileDescriptor

var file_eopa_data_v1_data_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x6f, 0x70, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x56, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x0d, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x43,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x31, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x22, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6a, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25,
	0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x70,
	0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f,
	0x70, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb3, 0x03, 0x0a, 0x16, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x57, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x57, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73,
	0x12, 0x46, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x57, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x73, 0x1a, 0xc6, 0x01, 0x0a, 0x0c, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x70, 0x61,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x39, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x1a, 0x3d, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x67, 0x65, 0x74,
	0x22, 0xf0, 0x03, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65,
	0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x05, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x1a, 0xcb, 0x01, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x3a, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a,
	0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x65, 0x73,
	0x70, 0x1a, 0x70, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x03, 0x67,
	0x65, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x22, 0x39, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2a, 0x60,
	0x0a, 0x07, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x70, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x4f, 0x50, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x4f, 0x50, 0x5f,
	0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x4f,
	0x50, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x03,
	0x32, 0xac, 0x03, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x65,
	0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6f, 0x70,
	0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x70, 0x61,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x57, 0x12, 0x24,
	0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x57, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x57, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42,
	0xb4, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6f, 0x70, 0x61, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74,
	0x79, 0x72, 0x61, 0x69, 0x6e, 0x63, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x2d, 0x6f, 0x70, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x65, 0x6f, 0x70, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x3b,
	0x64, 0x61, 0x74, 0x61, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x44, 0x58, 0xaa, 0x02, 0x0c, 0x45,
	0x6f, 0x70, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x45, 0x6f,
	0x70, 0x61, 0x5c, 0x44, 0x61, 0x74, 0x61, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x45, 0x6f, 0x70,
	0x61, 0x5c, 0x44, 0x61, 0x74, 0x61, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x45, 0x6f, 0x70, 0x61, 0x3a, 0x3a, 0x44, 0x61,
	0x74, 0x61, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eopa_data_v1_data_proto_rawDescOnce sync.Once
	file_eopa_data_v1_data_proto_rawDescData = file_eopa_data_v1_data_proto_rawDesc
)

func file_eopa_data_v1_data_proto_rawDescGZIP() []byte {
	file_eopa_data_v1_data_proto_rawDescOnce.Do(func() {
		file_eopa_data_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_eopa_data_v1_data_proto_rawDescData)
	})
	return file_eopa_data_v1_data_proto_rawDescData
}

var file_eopa_data_v1_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_eopa_data_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_eopa_data_v1_data_proto_goTypes = []any{
	(PatchOp)(0),                                  // 0: eopa.data.v1.PatchOp
	(*DataDocument)(nil),                          // 1: eopa.data.v1.DataDocument
	(*InputDocument)(nil),                         // 2: eopa.data.v1.InputDocument
	(*CreateDataRequest)(nil),                     // 3: eopa.data.v1.CreateDataRequest
	(*CreateDataResponse)(nil),                    // 4: eopa.data.v1.CreateDataResponse
	(*GetDataRequest)(nil),                        // 5: eopa.data.v1.GetDataRequest
	(*GetDataResponse)(nil),                       // 6: eopa.data.v1.GetDataResponse
	(*UpdateDataRequest)(nil),                     // 7: eopa.data.v1.UpdateDataRequest
	(*UpdateDataResponse)(nil),                    // 8: eopa.data.v1.UpdateDataResponse
	(*DeleteDataRequest)(nil),                     // 9: eopa.data.v1.DeleteDataRequest
	(*DeleteDataResponse)(nil),                    // 10: eopa.data.v1.DeleteDataResponse
	(*StreamingDataRWRequest)(nil),                // 11: eopa.data.v1.StreamingDataRWRequest
	(*StreamingDataRWResponse)(nil),               // 12: eopa.data.v1.StreamingDataRWResponse
	(*ErrorList)(nil),                             // 13: eopa.data.v1.ErrorList
	(*StreamingDataRWRequest_WriteRequest)(nil),   // 14: eopa.data.v1.StreamingDataRWRequest.WriteRequest
	(*StreamingDataRWRequest_ReadRequest)(nil),    // 15: eopa.data.v1.StreamingDataRWRequest.ReadRequest
	(*StreamingDataRWResponse_WriteResponse)(nil), // 16: eopa.data.v1.StreamingDataRWResponse.WriteResponse
	(*StreamingDataRWResponse_ReadResponse)(nil),  // 17: eopa.data.v1.StreamingDataRWResponse.ReadResponse
	(*structpb.Value)(nil),                        // 18: google.protobuf.Value
	(*structpb.Struct)(nil),                       // 19: google.protobuf.Struct
	(*anypb.Any)(nil),                             // 20: google.protobuf.Any
}
var file_eopa_data_v1_data_proto_depIdxs = []int32{
	18, // 0: eopa.data.v1.DataDocument.document:type_name -> google.protobuf.Value
	19, // 1: eopa.data.v1.InputDocument.document:type_name -> google.protobuf.Struct
	1,  // 2: eopa.data.v1.CreateDataRequest.data:type_name -> eopa.data.v1.DataDocument
	2,  // 3: eopa.data.v1.GetDataRequest.input:type_name -> eopa.data.v1.InputDocument
	1,  // 4: eopa.data.v1.GetDataResponse.result:type_name -> eopa.data.v1.DataDocument
	1,  // 5: eopa.data.v1.UpdateDataRequest.data:type_name -> eopa.data.v1.DataDocument
	0,  // 6: eopa.data.v1.UpdateDataRequest.op:type_name -> eopa.data.v1.PatchOp
	14, // 7: eopa.data.v1.StreamingDataRWRequest.writes:type_name -> eopa.data.v1.StreamingDataRWRequest.WriteRequest
	15, // 8: eopa.data.v1.StreamingDataRWRequest.reads:type_name -> eopa.data.v1.StreamingDataRWRequest.ReadRequest
	16, // 9: eopa.data.v1.StreamingDataRWResponse.writes:type_name -> eopa.data.v1.StreamingDataRWResponse.WriteResponse
	17, // 10: eopa.data.v1.StreamingDataRWResponse.reads:type_name -> eopa.data.v1.StreamingDataRWResponse.ReadResponse
	20, // 11: eopa.data.v1.ErrorList.errors:type_name -> google.protobuf.Any
	3,  // 12: eopa.data.v1.StreamingDataRWRequest.WriteRequest.create:type_name -> eopa.data.v1.CreateDataRequest
	7,  // 13: eopa.data.v1.StreamingDataRWRequest.WriteRequest.update:type_name -> eopa.data.v1.UpdateDataRequest
	9,  // 14: eopa.data.v1.StreamingDataRWRequest.WriteRequest.delete:type_name -> eopa.data.v1.DeleteDataRequest
	5,  // 15: eopa.data.v1.StreamingDataRWRequest.ReadRequest.get:type_name -> eopa.data.v1.GetDataRequest
	4,  // 16: eopa.data.v1.StreamingDataRWResponse.WriteResponse.create:type_name -> eopa.data.v1.CreateDataResponse
	8,  // 17: eopa.data.v1.StreamingDataRWResponse.WriteResponse.update:type_name -> eopa.data.v1.UpdateDataResponse
	10, // 18: eopa.data.v1.StreamingDataRWResponse.WriteResponse.delete:type_name -> eopa.data.v1.DeleteDataResponse
	6,  // 19: eopa.data.v1.StreamingDataRWResponse.ReadResponse.get:type_name -> eopa.data.v1.GetDataResponse
	13, // 20: eopa.data.v1.StreamingDataRWResponse.ReadResponse.errors:type_name -> eopa.data.v1.ErrorList
	3,  // 21: eopa.data.v1.DataService.CreateData:input_type -> eopa.data.v1.CreateDataRequest
	5,  // 22: eopa.data.v1.DataService.GetData:input_type -> eopa.data.v1.GetDataRequest
	7,  // 23: eopa.data.v1.DataService.UpdateData:input_type -> eopa.data.v1.UpdateDataRequest
	9,  // 24: eopa.data.v1.DataService.DeleteData:input_type -> eopa.data.v1.DeleteDataRequest
	11, // 25: eopa.data.v1.DataService.StreamingDataRW:input_type -> eopa.data.v1.StreamingDataRWRequest
	4,  // 26: eopa.data.v1.DataService.CreateData:output_type -> eopa.data.v1.CreateDataResponse
	6,  // 27: eopa.data.v1.DataService.GetData:output_type -> eopa.data.v1.GetDataResponse
	8,  // 28: eopa.data.v1.DataService.UpdateData:output_type -> eopa.data.v1.UpdateDataResponse
	10, // 29: eopa.data.v1.DataService.DeleteData:output_type -> eopa.data.v1.DeleteDataResponse
	12, // 30: eopa.data.v1.DataService.StreamingDataRW:output_type -> eopa.data.v1.StreamingDataRWResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_eopa_data_v1_data_proto_init() }
func file_eopa_data_v1_data_proto_init() {
	if File_eopa_data_v1_data_proto != nil {
		return
	}
	file_eopa_data_v1_data_proto_msgTypes[13].OneofWrappers = []any{
		(*StreamingDataRWRequest_WriteRequest_Create)(nil),
		(*StreamingDataRWRequest_WriteRequest_Update)(nil),
		(*StreamingDataRWRequest_WriteRequest_Delete)(nil),
	}
	file_eopa_data_v1_data_proto_msgTypes[15].OneofWrappers = []any{
		(*StreamingDataRWResponse_WriteResponse_Create)(nil),
		(*StreamingDataRWResponse_WriteResponse_Update)(nil),
		(*StreamingDataRWResponse_WriteResponse_Delete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eopa_data_v1_data_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eopa_data_v1_data_proto_goTypes,
		DependencyIndexes: file_eopa_data_v1_data_proto_depIdxs,
		EnumInfos:         file_eopa_data_v1_data_proto_enumTypes,
		MessageInfos:      file_eopa_data_v1_data_proto_msgTypes,
	}.Build()
	File_eopa_data_v1_data_proto = out.File
	file_eopa_data_v1_data_proto_rawDesc = nil
	file_eopa_data_v1_data_proto_goTypes = nil
	file_eopa_data_v1_data_proto_depIdxs = nil
}
